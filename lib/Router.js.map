{"version":3,"sources":["../src/Router.js"],"names":[],"mappings":"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","file":"Router.js","sourcesContent":["import Routr from \"routr\";\nimport { navigateStart, navigateSuccess, navigateFailure } from \"./actions\";\n\nimport createHistory from \"history/lib/createBrowserHistory\";\n\nfunction isSameRoute(route1, route2) {\n  // TODO: check params\n  return route1.name === route2.name;\n}\n\nexport default class Router {\n\n  constructor({ store, routes }) {\n    this.routes = routes;\n    this.store = store;\n    this.router = new Routr(routes);\n  }\n\n  listen() {\n\n    // Listen to changes to the browser's history\n    this._history = createHistory();\n    this._unlistenHistoryListener = this._history.listen( ::this.handleHistoryChange );\n    this._unsubscribeStoreListener = this.store.subscribe( ::this.handleStoreChange );\n  }\n\n  unlisten() {\n    this._unlistenHistoryListener();\n    this._unsubscribeStoreListener();\n  }\n\n  handleStoreChange() {\n    const state = this.store.getState();\n    if (state.router && state.router.pushUrl) {\n      // TODO: add data for the scroll position\n      this._history.pushState({}, state.router.pushUrl);\n    }\n  }\n\n  handleHistoryChange(location) {\n    this.navigate({\n      url: location.pathname\n    });\n  }\n\n  navigate({ url }) {\n    const route = this.matchRoute(url);\n    if (!route) {\n      return Promise.reject({\n        statusCode: 404\n      });\n    }\n\n    // TODO: remove `handler` variable from route (cannot stay in store)\n    this.store.dispatch(navigateStart(route));\n\n    this._currentRoute = route;\n\n    return new Promise((resolve, reject) => {\n\n      if (!route.config.fetchData) {\n        // No need to fetch data async for this route\n        this.store.dispatch(navigateSuccess(route));\n        resolve({ isNotFound: false });\n        return;\n      }\n\n      // Fetch data for this route\n      this.store.dispatch(route.config.fetchData(route))\n        .then(() => {\n\n          if (!isSameRoute(route, this._currentRoute)) {\n            return;\n          }\n          this.store.dispatch(navigateSuccess(route));\n          resolve({ isNotFound: false });\n        })\n        .catch(err => {\n          if (!isSameRoute(route, this._currentRoute)) {\n            return;\n          }\n          this.store.dispatch(navigateFailure(route, err));\n          if ((err.statusCode || err.status) === 404) {\n            resolve({\n              isNotFound: true\n            });\n            return;\n          }\n\n          reject(err);\n        })\n\n    });\n\n  }\n\n  matchRoute(url, options) {\n    const route = this.router.getRoute(url, options);\n    if (!route) {\n      return null;\n    }\n    return route;\n  }\n\n\n}\n"]}